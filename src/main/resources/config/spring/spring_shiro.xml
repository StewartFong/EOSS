<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util.xsd">

    <bean id="roleOr" class="com.jelly.eoss.shiro.RoleOrAuthorizationFilter"/>

    <bean id="shiroFilter" class="com.jelly.eoss.shiro.EossShiroFilterFactoryBean" depends-on="roleOr">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="/toLogin.ac"/>
        <property name="unauthorizedUrl" value="/401.jsp"/>
        <property name="filters">
            <util:map>
                <entry key="roleOr" value-ref="roleOr"/>
            </util:map>
        </property>
        <property name="filterChainDefinitions">
            <value>
                [urls]
                /static/** = anon
                /toLogin.ac = anon
                /login.ac = anon
                /system/** = authc, roleOr[系统管理员]
                /business/** = authc, roleOr[业务员]
                /** = authc
            </value>
        </property>
    </bean>

    <bean id="hashedCredentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        <property name="hashAlgorithmName" value="MD5"/>
    </bean>

    <bean id="eossAuthorizingRealm" class="com.jelly.eoss.shiro.EossAuthorizingRealm">
        <property name="credentialsMatcher" ref="hashedCredentialsMatcher"/>
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="eossAuthorizingRealm" />
    </bean>
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>
</beans>